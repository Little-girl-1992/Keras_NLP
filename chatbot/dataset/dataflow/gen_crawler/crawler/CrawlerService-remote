#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:utf8strings,new_style
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from crawler import CrawlerService
from crawler.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  TaskResponse submitTask(TaskRequest request)'
  print '  string getName()'
  print '   getCounters()'
  print '   getCountersByCategory(string prefix)'
  print '   getCountersByCategories( prefixes)'
  print '   getCounterNames()'
  print '  i64 getCounter(string key)'
  print '  i64 aliveSince()'
  print '  void shutdown()'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = CrawlerService.Client(protocol)
transport.open()

if cmd == 'submitTask':
  if len(args) != 1:
    print 'submitTask requires 1 args'
    sys.exit(1)
  pp.pprint(client.submitTask(eval(args[0]),))

elif cmd == 'getName':
  if len(args) != 0:
    print 'getName requires 0 args'
    sys.exit(1)
  pp.pprint(client.getName())

elif cmd == 'getCounters':
  if len(args) != 0:
    print 'getCounters requires 0 args'
    sys.exit(1)
  pp.pprint(client.getCounters())

elif cmd == 'getCountersByCategory':
  if len(args) != 1:
    print 'getCountersByCategory requires 1 args'
    sys.exit(1)
  pp.pprint(client.getCountersByCategory(args[0],))

elif cmd == 'getCountersByCategories':
  if len(args) != 1:
    print 'getCountersByCategories requires 1 args'
    sys.exit(1)
  pp.pprint(client.getCountersByCategories(eval(args[0]),))

elif cmd == 'getCounterNames':
  if len(args) != 0:
    print 'getCounterNames requires 0 args'
    sys.exit(1)
  pp.pprint(client.getCounterNames())

elif cmd == 'getCounter':
  if len(args) != 1:
    print 'getCounter requires 1 args'
    sys.exit(1)
  pp.pprint(client.getCounter(args[0],))

elif cmd == 'aliveSince':
  if len(args) != 0:
    print 'aliveSince requires 0 args'
    sys.exit(1)
  pp.pprint(client.aliveSince())

elif cmd == 'shutdown':
  if len(args) != 0:
    print 'shutdown requires 0 args'
    sys.exit(1)
  pp.pprint(client.shutdown())

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
